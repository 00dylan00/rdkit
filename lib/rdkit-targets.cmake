# Generated by CMake 3.4.3

if("${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}" LESS 2.5)
   message(FATAL_ERROR "CMake >= 2.6.0 required")
endif()
cmake_policy(PUSH)
cmake_policy(VERSION 2.6)
#----------------------------------------------------------------
# Generated CMake target import file.
#----------------------------------------------------------------

# Commands may need to know the format version.
set(CMAKE_IMPORT_FILE_VERSION 1)

# Protect against multiple inclusion, which would fail when already imported targets are added once more.
set(_targetsDefined)
set(_targetsNotDefined)
set(_expectedTargets)
foreach(_expectedTarget RDGeneral RDBoost DataStructs RDGeometryLib Alignment EigenSolvers Optimizer ForceField DistGeometry Catalogs GraphMol Depictor SmilesParse FileParsers SubstructMatch ChemReactions ChemTransforms Subgraphs FilterCatalog FragCatalog Descriptors Fingerprints PartialCharges MolTransforms ForceFieldHelpers DistGeomHelpers MolAlign MolChemicalFeatures ShapeHelpers MolCatalog MolDraw2D FMCS MolHash MMPA ReducedGraphs SLNParse SimDivPickers hc InfoTheory ChemicalFeatures)
  list(APPEND _expectedTargets ${_expectedTarget})
  if(NOT TARGET ${_expectedTarget})
    list(APPEND _targetsNotDefined ${_expectedTarget})
  endif()
  if(TARGET ${_expectedTarget})
    list(APPEND _targetsDefined ${_expectedTarget})
  endif()
endforeach()
if("${_targetsDefined}" STREQUAL "${_expectedTargets}")
  set(CMAKE_IMPORT_FILE_VERSION)
  cmake_policy(POP)
  return()
endif()
if(NOT "${_targetsDefined}" STREQUAL "")
  message(FATAL_ERROR "Some (but not all) targets in this export set were already defined.\nTargets Defined: ${_targetsDefined}\nTargets not yet defined: ${_targetsNotDefined}\n")
endif()
unset(_targetsDefined)
unset(_targetsNotDefined)
unset(_expectedTargets)


# The installation prefix configured by this project.
set(_IMPORT_PREFIX "C:/Program Files/RDKit")

# Create imported target RDGeneral
add_library(RDGeneral STATIC IMPORTED)

# Create imported target RDBoost
add_library(RDBoost STATIC IMPORTED)

# Create imported target DataStructs
add_library(DataStructs STATIC IMPORTED)

# Create imported target RDGeometryLib
add_library(RDGeometryLib STATIC IMPORTED)

# Create imported target Alignment
add_library(Alignment STATIC IMPORTED)

# Create imported target EigenSolvers
add_library(EigenSolvers STATIC IMPORTED)

# Create imported target Optimizer
add_library(Optimizer STATIC IMPORTED)

# Create imported target ForceField
add_library(ForceField STATIC IMPORTED)

# Create imported target DistGeometry
add_library(DistGeometry STATIC IMPORTED)

# Create imported target Catalogs
add_library(Catalogs STATIC IMPORTED)

# Create imported target GraphMol
add_library(GraphMol STATIC IMPORTED)

# Create imported target Depictor
add_library(Depictor STATIC IMPORTED)

# Create imported target SmilesParse
add_library(SmilesParse STATIC IMPORTED)

# Create imported target FileParsers
add_library(FileParsers STATIC IMPORTED)

# Create imported target SubstructMatch
add_library(SubstructMatch STATIC IMPORTED)

# Create imported target ChemReactions
add_library(ChemReactions STATIC IMPORTED)

# Create imported target ChemTransforms
add_library(ChemTransforms STATIC IMPORTED)

# Create imported target Subgraphs
add_library(Subgraphs STATIC IMPORTED)

# Create imported target FilterCatalog
add_library(FilterCatalog STATIC IMPORTED)

# Create imported target FragCatalog
add_library(FragCatalog STATIC IMPORTED)

# Create imported target Descriptors
add_library(Descriptors STATIC IMPORTED)

# Create imported target Fingerprints
add_library(Fingerprints STATIC IMPORTED)

# Create imported target PartialCharges
add_library(PartialCharges STATIC IMPORTED)

# Create imported target MolTransforms
add_library(MolTransforms STATIC IMPORTED)

# Create imported target ForceFieldHelpers
add_library(ForceFieldHelpers STATIC IMPORTED)

# Create imported target DistGeomHelpers
add_library(DistGeomHelpers STATIC IMPORTED)

# Create imported target MolAlign
add_library(MolAlign STATIC IMPORTED)

# Create imported target MolChemicalFeatures
add_library(MolChemicalFeatures STATIC IMPORTED)

# Create imported target ShapeHelpers
add_library(ShapeHelpers STATIC IMPORTED)

# Create imported target MolCatalog
add_library(MolCatalog STATIC IMPORTED)

# Create imported target MolDraw2D
add_library(MolDraw2D STATIC IMPORTED)

# Create imported target FMCS
add_library(FMCS STATIC IMPORTED)

# Create imported target MolHash
add_library(MolHash STATIC IMPORTED)

# Create imported target MMPA
add_library(MMPA STATIC IMPORTED)

# Create imported target ReducedGraphs
add_library(ReducedGraphs STATIC IMPORTED)

# Create imported target SLNParse
add_library(SLNParse STATIC IMPORTED)

# Create imported target SimDivPickers
add_library(SimDivPickers STATIC IMPORTED)

# Create imported target hc
add_library(hc STATIC IMPORTED)

# Create imported target InfoTheory
add_library(InfoTheory STATIC IMPORTED)

# Create imported target ChemicalFeatures
add_library(ChemicalFeatures STATIC IMPORTED)

# Load information for each installed configuration.
get_filename_component(_DIR "${CMAKE_CURRENT_LIST_FILE}" PATH)
file(GLOB CONFIG_FILES "${_DIR}/rdkit-targets-*.cmake")
foreach(f ${CONFIG_FILES})
  include(${f})
endforeach()

# Cleanup temporary variables.
set(_IMPORT_PREFIX)

# Loop over all imported files and verify that they actually exist
foreach(target ${_IMPORT_CHECK_TARGETS} )
  foreach(file ${_IMPORT_CHECK_FILES_FOR_${target}} )
    if(NOT EXISTS "${file}" )
      message(FATAL_ERROR "The imported target \"${target}\" references the file
   \"${file}\"
but this file does not exist.  Possible reasons include:
* The file was deleted, renamed, or moved to another location.
* An install or uninstall procedure did not complete successfully.
* The installation package was faulty and contained
   \"${CMAKE_CURRENT_LIST_FILE}\"
but not all the files it references.
")
    endif()
  endforeach()
  unset(_IMPORT_CHECK_FILES_FOR_${target})
endforeach()
unset(_IMPORT_CHECK_TARGETS)

# This file does not depend on other imported targets which have
# been exported from the same project but in a separate export set.

# Commands beyond this point should not need to know the version.
set(CMAKE_IMPORT_FILE_VERSION)
cmake_policy(POP)
